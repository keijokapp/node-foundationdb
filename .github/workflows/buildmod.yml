name: deploy

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      # version:
      #   description: 'Name of version (ie 5.5.0)'
      #   required: true

jobs:
  prebuild-linux:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup nodejs
      uses: actions/setup-node@v2
      with:
        node-version: 18

    - run: wget -nv "https://github.com/apple/foundationdb/releases/download/7.2.5/foundationdb-clients_7.2.5-1_amd64.deb"
    - run: sudo dpkg -i foundationdb-clients_7.2.5-1_amd64.deb
    - run: sudo mkdir -p /var/lib/foundationdb/data
    - run: wget -nv "https://github.com/apple/foundationdb/releases/download/7.2.5/foundationdb-server_7.2.5-1_amd64.deb"
    - run: sudo dpkg -i foundationdb-server_7.2.5-1_amd64.deb

    - run: yarn
    - run: yarn prebuild
    - run: yarn test

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: linux-x64
        path: prebuilds/linux-*
        retention-days: 5

  prebuild-macos:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup nodejs
      uses: actions/setup-node@v2
      with:
        node-version: 14

    # x86 first.
    - run: wget -nv "https://github.com/apple/foundationdb/releases/download/7.2.5/FoundationDB-7.2.5_x86_64.pkg"
    - run: sudo installer -pkg FoundationDB-7.2.5_x86_64.pkg -target /

    - run: yarn
    - run: yarn test

    # Could do a universal binary, but fdb_c isn't universal. This should be fine.
    - run: yarn prebuild --arch x64

    # Now install the arm version of the package and build for ARM. (Cross-compiling doesn't work otherwise - not sure why)
    - run: wget -nv "https://github.com/apple/foundationdb/releases/download/7.2.5/FoundationDB-7.2.5_arm64.pkg"
    - run: sudo installer -pkg FoundationDB-7.2.5_arm64.pkg -target /

    - run: yarn prebuild --arch arm64

    # Build for apple M1 and make sure the prebuilt module actually has arm64 code
    # Blocked by https://github.com/actions/virtual-environments/issues/2486
    # - run: yarn prebuild --arch arm64
    # - run: lipo -archs prebuilds/darwin-arm64/node.napi.node | grep -q arm64

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: darwin
        path: prebuilds/darwin-*
        retention-days: 5
        if-no-files-found: error

  # Disabled until the windows install image is fixed.
  # prebuild-windows:
  #   runs-on: windows-latest
  #   env:
  #     FOUNDATIONDB_INSTALL_PATH: "C:\\Program Files\\FoundationDB"

  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Setup nodejs
  #     uses: actions/setup-node@v2
  #     with:
  #       node-version: 18

  #   # Bleh - the 7.xx builds are currently missing one of the header files. More detail here:
  #   # https://forums.foundationdb.org/t/fdb-c-types-h-missing-in-windows-install-image/3817
  #   - run: (new-object net.webclient).DownloadFile('https://github.com/apple/foundationdb/releases/download/7.2.5/foundationdb-7.2.5-x64.msi', 'c:\foundationdb.msi')
  #   - run: dir c:\foundationdb.msi
  #   - run: msiexec /i c:\foundationdb.msi /quiet /passive /norestart /log install.log | Out-Null

  #   - run: echo "C:\\Program Files\\FoundationDB\bin" >> $GITHUB_PATH

  #   - run: yarn
  #   - run: yarn prebuild

  #   # For some reason this test fails - it can't find the prebuild even though its *right there*!!
  #   # - run: yarn test
  #   # - run: Get-ChildItem -Recurse prebuild

  #   - name: Upload artifacts
  #     uses: actions/upload-artifact@v2
  #     with:
  #       name: win32-x64
  #       path: prebuilds/win32-x64
  #       retention-days: 5

  deploy-npm:
    # needs: [prebuild-windows, prebuild-macos, prebuild-linux]
    needs: [prebuild-macos, prebuild-linux]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: 18
        registry-url: 'https://registry.npmjs.org'

    - uses: actions/download-artifact@v3
      with:
        name: darwin
        path: prebuilds

    - uses: actions/download-artifact@v3
      with:
        name: linux-x64
        path: prebuilds

    - run: ls -R prebuilds

    # Ideally I shouldn't need this...
    - run: wget -nv "https://github.com/apple/foundationdb/releases/download/7.2.5/foundationdb-clients_7.2.5-1_amd64.deb"
    - run: sudo dpkg -i foundationdb-clients_7.2.5-1_amd64.deb

    # And I could just run the linux script last anyway.
    - run: yarn
    - run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
